name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  validate:
    uses: ./.github/workflows/validate-manifests.yml

  build:
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Copy registry to pages directory
        run: |
          mkdir -p pages/registry
          mkdir -p pages/api/servers
          cp -r mcp-registry/* pages/registry/
          
          # Copy all manifest files to API directory for direct access
          find mcp-registry/servers -name "manifest.json" -type f | while read manifest; do
            server_name=$(basename $(dirname "$manifest"))
            cp "$manifest" "pages/api/servers/$server_name.json"
          done
          
          # Create a single combined JSON file with all servers
          echo "[" > pages/api/servers.json
          first=true
          for manifest in $(find mcp-registry/servers -name "manifest.json" -type f | sort); do
            server_name=$(basename $(dirname "$manifest"))
            if [ "$first" = true ]; then
              first=false
            else
              echo "," >> pages/api/servers.json
            fi
            
            # Process the manifest to create server entry with additional frontend fields
            jq -c '. + {
              "name": .name,
              "displayName": .display_name,
              "tags": .tags,
              "repository": .repository.url,
              "documentation": "/registry/servers/\(.name)/",
              "apiEndpoint": "/api/servers/\(.name).json"
            }' "$manifest" >> pages/api/servers.json
          done
          echo "]" >> pages/api/servers.json
      
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1.0.12
        with:
          source: ./pages
          destination: ./_site
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
